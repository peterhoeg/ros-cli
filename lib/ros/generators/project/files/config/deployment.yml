# Configuration values defined here will be overridden by any values defined in environments/[ROS_ENV].yml
---
platform:
  # TODO: use the value of infra.provider to provision storage, e.g. S3 bucket
  storage: platform # storage is provisioned at platform with a dir per service
  # storage: service # each service provisions its own storage
  environment:
    aws_access_key_id: test
    # export PLATFORM__ENVIRONMENT__AWS_SECRET_ACCESS_KEY
    aws_secret_access_key: test2
    request_logging:
      enabled: yes
    system_logging:
      enabled: yes
      # connection__host__port: 80
  # The supporting services that run on the platform and their default environment
  basic_services:
    fluentd:
      config:
        bucket: data-lake
    # monitoring:
    # moenvironment:
    # mo  key: value
    sftp:
      environment:
        aws_access_key_id: test
        aws_secret_access_key: test
        bucket_endpoint_url: http://localstack:4572
        bucket_name: sftp-users
  services:
    # image: development
    environment:
      rails_database_host: postgres
      redis_url: redis://redis:6379

services:
  account:
    enabled: no
    mount: yes
    profiles: ['server', 'worker']
    ros: yes
  billing:
    enabled: no
    mount: yes
    profiles: ['server', 'worker']
    ros: yes
  cognito:
    mount: yes
    profiles: ['server', 'worker']
    ros: yes
  comm:
    mount: yes
    profiles: ['server', 'worker']
    ros: yes
    environment:
      # overrride by setting PLATFORM__SERVICES__COMM__ENVIRONMENT__AWS_ACCESS_KEY_ID
  iam:
    mount: yes
    profiles: ['server', 'worker']
    ros: yes
    environment:
      platform:
        credential:
          # PLATFORM__SERVICES__IAM__ENVIRONMENT__PLATFORM__CREDENTIAL__SALT
          salt: 243790007
  storage:
    enabled: no
    mount: yes
    profiles: ['server', 'worker']
    ros: yes
    # TODO: Perhaps storage just gets the S3 bucket from a platform or service env
    # requires localstack running s3 or and S3 bucket, SFTP container, Rails Storage service
    # if enabled then either the ALB or the SG needs to permit the SFTP port
    # If localstack include that in COMPIOSE_FILE in .env
    # If S3 then when calling ros infra:provision it writes a value to tfvars that has TF create the S3 bucket
    environment:
      aws_access_key_id: test
      aws_secret_access_key: test

providers:
  aws:
    instance:
      region: ap-southeast-1
      instance:
        type: t3.large
        key_pair: ''
        tags:
          managed_by: terraform
        ami_distro: debian
    kubernetes:
      # Leave kubeconfig unspecified to use the kubeconfig generated by 'ros devops:provision'
      kubeconfig: ~/.kube/config

      # Specify an alternative namespace for deployments
      # namespace: default

      # Multiple deployments can be configured by setting branch_deployments to 'yes'
      # When 'yes' deployments are made into the namespace taken from the branch name
      # branch_deployments: no
      # TODO: Add port deployments = yes which makes the COMPOSE_NAME the port number
      branch_deployments: yes

      # When branch_deployments is 'yes' the deployment's endpoint hostname is branch-api.subdomain.domain
      # Set api_branch to have a specific namespace (branch) mapped to api.subdomain.domain
      # api_branch: master
  azure:
    instance:
    kubernetes:
  gcp:
    instance:
    kubernetes:

images:
  static_gems:
    bundler: 2.0.1
    nokogiri: 1.10.3
    ffi: 1.10.0
    mini_portile2: 2.4.0
    msgpack: 1.2.10
    pg: 1.1.4
    nio4r: 2.3.1
    puma: 3.12.1
    eventmachine: 1.2.7
  development:
    build_args:
      rails_env: development
      bundle_string: --without production
      os_packages: ['libpq5', 'tree', 'curl', 'git', 'sudo', 'vim', 'less', 'tcpdump', 'net-tools', 'iputils-ping']
  production:

profiles:
  server:
    command: bundle exec rails server -b 0.0.0.0
    app_command: bundle exec rails server -b 0.0.0.0
    bootstrap_enabled: true
    bootstrap_command: bundle exec rails app:ros:db:reset app:ros:cognito:db:seed
  worker:
    command: bundle exec sidekiq -r spec/dummy
    app_command: bundle exec sidekiq -r spec/dummy

infra:
  endpoint:
    scheme: https
    host: api
  terraform:
    state:
      type: local
      # can be remote tf state
      # type: s3
      # bucket: org-rails-on-services-terraform-state
      # key: ros-develop-ec2
      # dynamodb_table: org-rails-on-services-terraform-lock

devops:
  registry: railsonservices
  cicd:
    provider: circleci
    push_on_new_tag: true

# generators:
#   service:
