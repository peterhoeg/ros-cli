#!/usr/bin/env ruby

if ARGV[0]&.eql? '-T'
  res = %x(rake -T #{ARGV[1]})
  STDOUT.puts res.gsub(/^rake/, 'ros').gsub("\nrake", "\nros")
elsif ARGV[0]&.include? ':'
  require 'rake'
  tasks = ARGV.each_with_object([]) { |arg, tasks| tasks.append(arg) if arg.index(':') }
  args = ARGV.each_with_object([]) { |arg, args| args.append(arg) unless arg.index(':') }
  Rake.load_rakefile('Rakefile') if File.exists?('Rakefile')
  tasks.each { |task| Rake::Task[task].invoke(args) }
else
  require 'bundler/setup'
  require 'ros'
  # cli_loaded = false
  dir = Dir.pwd.split('/').last
  arg = ARGV[0]
    # if %w(be fe data).include?(Dir.pwd.split('/').last) or %w(be fe data).include?(ARGV[0])
  # if %w(be fe data).include?(dir)
  #   require "ros/cli/#{dir}"
  #   Object.const_get("Ros::#{dir.capitalize}::Cli").start
  # elsif %w(be fe data).include?(arg)
  #   require "ros/cli/#{arg}"
  #   ARGV.shift
  #   Object.const_get("Ros::#{arg.capitalize}::Cli").start
  # else
    # require 'ros/cli'
    require 'ros/cli/be'
    Ros::Be::Cli.start
  # end
end
